var TokenType=Object.freeze({IDENTIFIER:"IDENTIFIER",KEYWORD:"KEYWORD",NUMBER:"NUMBER",STRING:"STRING",SPACE:"SPACE",NEWLINE:"NEWLINE",TAB:"TAB",IMPORTNAME:"IMPORTNAME",HEADDATATYPE:"HEADDATATYPE",CONSTANT:"CONSTANT",OTHERPUNCTUATION:"OTHERPUNCTUATION",JAVADOC:"JAVADOC",ANNOTATION:"ANNOTATION"}),Parser=function(a){this.tokens=a;this.outPlain=this.outCodeHTML=""};
Parser.prototype.parse=function(){for(var a=0;a<this.tokens.length;a++)switch(String(this.tokens[a].type)){case "KEYWORD":case "IDENTIFIER":case "NUMBER":case "STRING":case "IMPORTNAME":case "HEADDATATYPE":case "OTHERPUNCTUATION":case "JAVADOC":case "ANNOTATION":case "CONSTANT":this.outCodeHTML+='<span class="'+String(this.tokens[a].type).toLowerCase()+'">'+this.cleanse(this.tokens[a].text)+"</span>";this.outPlain+=this.tokens[a].text;break;case "NEWLINE":this.outCodeHTML+='<span class="'+String(this.tokens[a].type).toLowerCase()+
'"><br /></span>';this.outPlain+="\n";break;case "TAB":this.outCodeHTML+='<span class="'+String(this.tokens[a].type).toLowerCase()+'">    </span>';this.outPlain+="\t";break;case "SPACE":this.outCodeHTML+='<span class="'+String(this.tokens[a].type).toLowerCase()+'"> </span>',this.outPlain+=" "}return this.outCodeHTML};Parser.prototype.cleanse=function(a){return a.replaceAll("[&]","&amp;").replaceAll("[ ]","&nbsp;").replaceAll("[{]","&lbrace;").replaceAll("[<]","&lt;").replaceAll("[>]","&gt;")};
var Token=function(a,b,c,d){this.text=a;this.line=this.line;this.col=c;this.type=d},Tokenizer=function(){this.line=1;this.current=this.start=this.col=0;this.tokens=[];this.sourceCode="";this.keywords=[];this.keywords.push("abstract");this.keywords.push("assert");this.keywords.push("boolean");this.keywords.push("break");this.keywords.push("byte");this.keywords.push("case");this.keywords.push("catch");this.keywords.push("char");this.keywords.push("class");this.keywords.push("continue");this.keywords.push("const");
this.keywords.push("default");this.keywords.push("do");this.keywords.push("double");this.keywords.push("else");this.keywords.push("enum");this.keywords.push("exports");this.keywords.push("extends");this.keywords.push("final");this.keywords.push("finally");this.keywords.push("float");this.keywords.push("for");this.keywords.push("goto");this.keywords.push("if");this.keywords.push("implements");this.keywords.push("import");this.keywords.push("instanceof");this.keywords.push("int");this.keywords.push("interface");
this.keywords.push("long");this.keywords.push("module");this.keywords.push("native");this.keywords.push("new");this.keywords.push("non-sealed");this.keywords.push("package");this.keywords.push("private");this.keywords.push("protected");this.keywords.push("public");this.keywords.push("requires");this.keywords.push("return");this.keywords.push("short");this.keywords.push("static");this.keywords.push("strictfp");this.keywords.push("super");this.keywords.push("switch");this.keywords.push("synchronized");
this.keywords.push("this");this.keywords.push("throw");this.keywords.push("throws");this.keywords.push("transient");this.keywords.push("try");this.keywords.push("var");this.keywords.push("void");this.keywords.push("volatile");this.keywords.push("while");this.keywords.push("yield");this.keywords.push("sealed");this.keywords.push("record");this.keywords.push("permits");this.keywords.push("true");this.keywords.push("false");this.keywords.push("null");this.keywords.push("System")};
Tokenizer.prototype.peek=function(){return this.sourceCode.charAt(this.current+1)};Tokenizer.prototype.isAlphabet=function(a){return null!=String(a).match(/^[a-zA-Z_$][a-zA-Z_$0-9]*$/)};Tokenizer.prototype.isAtEnd=function(){return this.current>=this.sourceCode.length};Tokenizer.prototype.annotation=function(){for(;!this.isAtEnd()&&" "!=this.peek();)"\n"==this.peek()&&this.line++,this.col++,this.current++};
Tokenizer.prototype.multilineString=function(){for(;!this.isAtEnd()&&("\\"==this.sourceCode.charAt(this.current-1)||'"'!=this.sourceCode.charAt(this.current)||'"'!=this.peek()||'"'!=this.peekNext());)"\n"==this.peek()&&this.line++,this.col++,this.current++};Tokenizer.prototype.multilineComment=function(){for(;!this.isAtEnd()&&("*"!=this.peek()||"/"!=this.peekNext());)"\n"==this.peek()&&this.line++,this.col++,this.current++;this.col++;this.current++};
Tokenizer.prototype.peekNext=function(){return this.sourceCode.charAt(this.current+2)};Tokenizer.prototype.isUppercase=function(a){return null!=a.match(/^[A-Z_$][A-Z_$0-9]*$/)};Tokenizer.prototype.comment=function(){for(;!this.isAtEnd()&&"\n"!=this.peek();)this.col++,this.current++};Tokenizer.prototype.character=function(){for(;!this.isAtEnd()&&("'"!=this.peek()||"\\"==this.sourceCode.charAt(this.current));)this.col++,this.current++};
Tokenizer.prototype.string=function(){for(;!this.isAtEnd()&&('"'!=this.peek()||"\\"==this.sourceCode.charAt(this.current));)this.col++,this.current++};Tokenizer.prototype.isNumerical=function(a){return null!=String(a).match(/[0-9]/)};
Tokenizer.prototype.tokenize=function(a){for(this.sourceCode=a;!this.isAtEnd();){var b=this.sourceCode.charAt(this.current);if(this.isAlphabet(b)){for(;!this.isAtEnd()&&this.isAlphabet(this.peek());)this.col++,this.current++;this.keywords.includes(a.substring(this.start,this.current+1))?this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.KEYWORD)):this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.IDENTIFIER))}else if(this.isNumerical(b)){for(;!this.isAtEnd();)if(this.isNumerical(this.peek())||
"."==this.peek())this.col++,this.current++;else break;this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.NUMBER))}else switch(b){case " ":this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.SPACE));break;case "\n":this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.NEWLINE));this.line++;this.col=-1;break;case "\t":this.tokens.push(new Token(a.substring(this.start,this.current+
1),this.line,this.col,TokenType.TAB));break;case "@":this.annotation();this.current++;this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.ANNOTATION));break;case '"':'"'==this.peek()&&'"'==this.peekNext()?this.multilineString():this.string();this.current++;this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.STRING));break;case "'":this.character();this.current++;this.tokens.push(new Token(a.substring(this.start,
this.current+1),this.line,this.col,TokenType.STRING));break;case "/":"/"==this.peek()?(this.comment(),this.current++,this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.STRING))):"*"==this.peek()?"*"!=this.peekNext()?(this.multilineComment(),this.current++,this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.STRING))):(this.multilineComment(),this.current++,this.tokens.push(new Token(a.substring(this.start,this.current+
1),this.line,this.col,TokenType.JAVADOC))):this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.OTHERPUNCTUATION));break;case ";":case "(":case ")":case "{":case "}":case "<":case ">":case "[":case "]":case ",":case "*":case "=":case "+":case "-":case "%":case "!":case "~":case "&":case "|":case "?":case ":":case "^":case ".":this.tokens.push(new Token(a.substring(this.start,this.current+1),this.line,this.col,TokenType.OTHERPUNCTUATION));break;default:console.log("Could not interpret character: '"+
b+"'. [ln: "+this.line+"]")}this.col++;this.current++;this.start=this.current}for(b=0;b<this.tokens.length;b++){if("import"===this.tokens[b].text||"package"===this.tokens[b].text)var c;else if(this.tokens[b].type==TokenType.IDENTIFIER&&(this.current=b,!this.isAtEnd()&&"."===this.tokens[b+1].text))for(c=b+1;this.tokens[c].type!=TokenType.OTHERPUNCTUATION||"."===this.tokens[c].text;)"."!==this.tokens[c].text&&(a=this.tokens[c],this.tokens.splice(c,0,new Token(a.text,a["this"].line,a.col,TokenType.HEADDATATYPE)),
this.tokens.remove(c+1)),c++;!this.isUppercase(this.tokens[b].text)||this.tokens[b].type!=TokenType.HEADDATATYPE&&this.tokens[b].type!=TokenType.IDENTIFIER||(a=this.tokens[b],this.tokens.push(b,0,new Token(a.text,a["this"].line,a.col,TokenType.CONSTANT)),this.tokens.remove(b+1))}return this.tokens};
for(var code=document.getElementsByTagName("code"),i=0;i<code.length;i++){var tokensList=(new Tokenizer).tokenize(code[i].innerText),parser=new Parser(tokensList),output=parser.parse();code[i].innerHTML=output};